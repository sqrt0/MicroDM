#!/bin/bash
sigmaTime(){
    local hour="$1"
    local minete="$2"
    hour=${hour#0}
    minete=${minete#0}
    if [ -z "$hour" ];then
        hour="0"
    fi
    if [ -z "$minete" ];then
        minete="0"
    fi
    echo $((hour * 60 + minete ))
}
finish(){
    if [ -f /tmp/"$pid".txt ];then
        rm /tmp/"$pid".txt
    fi
    tput cnorm
}
logo(){
    echo -e "$color+------------------------+"
    echo -e "$color| Micro Download Manager |"
    echo -e "$color+------------------------+"
    echo
    echo
}
dateTime(){
    dateHour=`date +%H:%M`
    dateHour=${dateHour/:/ }
    sigmaDate=`sigmaTime $dateHour`
}
startTime(){
    local time="$1"
    time=${time/:/ }
    sigma_time=`sigmaTime $time`
    dateTime
    while [ "$sigmaDate" != "$sigmaTime" ];do
        echo -e "$color Start download in: $start_time_input"
        echo -e $color $((sigma_time - sigmaDate)) "minetes until start"
        if [ $((sigma_time - sigmaDate)) == "0" ];then
                notify-send -t 5000 "Starting download." &
                paplay /$HOME/.mdm/notification/connection.ogg
                clear
                break
        fi
        sleep 10
        clear
        dateTime
    done
}
endTime(){
    local time="$1"
    time=${time/:/ }
    sigma_time=`sigmaTime $time`
    dateTime
    while [ "$sigmaDate" != "$sigmaTime" ];do
        if [ -f /tmp/"$pid".txt ];then
            exit
        fi
        sleep 10
        dateTime
    done
    killall aria2c
}
downloadFunction_aria(){
    mkdir $HOME/.mdm_down 2>/dev/null
    logo
    aria2c -c -x 16 -s 16 -k 1M -d "$HOME/.mdm_down" "$link"
    if [ "$?" == "0" ];then
        mv "$HOME/.mdm_down/$name" "$HOME/$dir"
        notify-send -t 10000 "Download complite." &
        paplay /$HOME/.mdm/notification/complite.ogg
        xdg-open $HOME/Downloads/MicroDM/ 2>/dev/null
        
    else
        notify-send -t 10000 "Download Failed." &
        paplay /$HOME/.mdm/notification/failed.ogg
        
    fi
    echo "Download complite" > /tmp/"$pid".txt
}
downloadFunction_wget(){
    mkdir $HOME/.mdm_down 2>/dev/null
    cd "$HOME/.mdm_down"
    logo
    wget "$link"
    if [ "$?" == "0" ];then
        mv "$HOME/.mdm_down/$name" "$HOME/$dir"
        notify-send -t 10000 "Download complite." &
        paplay /$HOME/.mdm/notification/complite.ogg
        nautilus $HOME/Downloads/MicroDM/ 2>/dev/null
        
    else
        notify-send -t 10000 "Download Failed." &
        paplay /$HOME/.mdm/notification/failed.ogg
        
    fi
    echo "Download complite" > /tmp/"$pid".txt
}
aria2_list(){
    mkdir $HOME/.mdm_down 2>/dev/null
    logo
    aria2c -c -x 16 -s 16 -k 1M -d $dir -i $list_dir
    if [ "$?" == "0" ];then
        notify-send -t 10000 "Download complite." &
        paplay /$HOME/.mdm/notification/complite.ogg
        xdg-open $HOME/Downloads/MicroDM/ 2>/dev/null
        
    else
        notify-send -t 10000 "Download Failed." &
        paplay /$HOME/.mdm/notification/failed.ogg
        
    fi
    echo "Download complite" > /tmp/"$pid".txt
}
wget_list(){
    mkdir $HOME/.mdm_down 2>/dev/null
    cd "$HOME/.mdm_down"
    logo
    wget --input $list_dir 
    if [ "$?" == "0" ];then
        notify-send -t 10000 "Download complite." &
        paplay /$HOME/.mdm/notification/complite.ogg
        nautilus $HOME/Downloads/MicroDM/ 2>/dev/null
        
    else
        notify-send -t 10000 "Download Failed." &
        paplay /$HOME/.mdm/notification/failed.ogg
        
    fi
    echo "Download complite" > /tmp/"$pid".txt
}


clear screen
tput civis
trap finish exit
user=$HOME
pid="$$"
link=""
color=""
downloader="aria2"
user_downloader=$(cat ~/.mdm/config.txt 2> /dev/null | awk '/downloader/ {print $0 }' | awk -F "=" '{print $2}')
user_color=$(cat ~/.mdm/config.txt 2> /dev/null | awk '/color/ {print $0 }' | awk -F "=" '{print $2}')
dir=$(cat ~/.mdm/config.txt 2> /dev/null | awk '/defdir/ {print $0 }' | awk -F "=" '{print $2}')
dir="$user/$dir"
if [ "$user_color" == "cyan" ];then
    color="\E[36;01m"
fi
while getopts "s:e:i:l:d:cvh" options;do
    case "$options" in
        s)
            start_time_input="$OPTARG"
        ;;
        i)
            list_dir="$OPTARG"
            link="list links inputed"
        ;;
        e)
            end_time_input="$OPTARG" 
        ;;
        l)
            link="$OPTARG" 
            echo "$link"
        ;;
        d)
            dir="$OPTARG" 
            if [ -z "$dir" ];then
                dir=/$HOME/Downloads/MicroDM
            fi
        ;;
        v)
            cat /$HOME/.mdm/v.txt
            exit 
        ;;
        h)
            logo
            cat /$HOME/.mdm/h.txt
            exit
        ;;
        c)
            tput cnorm
            read -p " Select your downloader(wget/aria2): " downloader_input
            read -p " Select a color for terminal(white/cyan): " color_input
            read -p " Enter your defult directory: " defult_directory
            echo -e "$color Done."
            echo "downloader=$downloader_input" > /$HOME/.mdm/config.txt
            echo "color=$color_input" >> /$HOME/.mdm/config.txt
            echo "defdir=$defult_directory" >> /$HOME/.mdm/config.txt
            exit
        ;;
    esac
done
downloader=$user_downloader
if [ -z "$link" ];then
    echo -e "$color type 'mdm -h' in your terminal. :)"
    exit
fi
name=${link##*[/]}
if [ "$link" == "list links inputed" ];then
    case "$downloader" in 
        "aria2")
            if [ ! -z "$start_time_input" ];then
                startTime $start_time_input
	    fi
            if [ ! -z "$end_time_input" ];then
                aria2_list &
                endTime $end_time_input
            else
                aria2_list
            fi
        ;;
        "wget")
            if [ ! -z "$start_time_input" ];then
                startTime $start_time_input
            fi
            if [ ! -z "$end_time_input" ];then
                wget_list &
                endTime $end_time_input
            else
                wget_list
            fi
        ;;
    esac

else
    echo "$name"
    case "$downloader" in 
        "aria2")
            if [ ! -z "$start_time_input" ];then
                startTime $start_time_input
	    fi
            if [ ! -z "$end_time_input" ];then
                downloadFunction_aria &
                endTime $end_time_input
            else
                downloadFunction_aria
            fi
        ;;
        "wget")
            if [ ! -z "$start_time_input" ];then
                startTime $start_time_input
            fi
            if [ ! -z "$end_time_input" ];then
                downloadFunction_wget &
                endTime $end_time_input
            else
                downloadFunction_wget
            fi
        ;;
    esac
fi
exit
